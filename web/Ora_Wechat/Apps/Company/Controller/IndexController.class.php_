<?php
namespace Company\Controller;

use Think\Controller;
use Classes\Factory;
use Classes\GFunc;
import('Factory', LIB_ROOT_PATH . 'Classes/');

class IndexController extends BaseController{
    private $rows = 10;
    
    //最多标签个数
    private $_MAX_TAG_NUM = 6;
    
    public function _initialize(){
        parent::_initialize();
        $this->assign('title','欢迎您登录橙脉企业平台');
    }

    public function demo (){
        /*
        $_SESSION['accesstoken'] = 'AVNE7w7CB8CMpEuyXQSkVgSb2HzGOAkLtdRFMd2Q';
        
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url'  => WEB_SERVICE_ROOT_URL.'/wxbiz/bizcard/synccardfromwxtobiz?wxcardid=29127&wechatid=ofIP5vgyU1T5pjM165QSZAecn7vA',
            )
        );
        print_r($rst);
        //$this->display('demo');*/
    }

    /**
     * 做成vcard数据
     * @param arr $data
     * @return arr
     */
    private function _buildVcard($data){
        $newarr = array();
        $newarr['name']   = array();
        $newarr['mobile'] = array();
        
        $newarr['company'] = array(
            array(
                'company_name' => array(),
                'address'      => array(),
                'job'          => array(),
                'department'   => array(),
                'telephone'    => array(),
                'web'          => array(),
                'email'        => array()
            )
        );
        
        $defaultArr = array(
            'title_self_def' => '0',
            'is_chinese'     => '1',
            'is_changed'     => '1',
            'input'          => '2',
        );
        
        $newarr['name'] = $this->_buildVcardItem($data['FN'], array_merge($defaultArr, array(
            'surname'    => '',
            'given_name' => '',
            'title'      => '姓名',
        )));
        
        $newarr['mobile'] = $this->_buildVcardItem($data['CELL'], array_merge($defaultArr, array(
            'title' => '手机',
        )));
        
        $newarr['company'][0]['company_name'] = $this->_buildVcardItem($data['ORG'], array_merge($defaultArr, array(
            'title' => '公司',
        )));
        
        $newarr['company'][0]['address'] = $this->_buildVcardItem($data['ADR'], array_merge($defaultArr, array(
            'title' => '地址',
        )));
        
        $newarr['company'][0]['job'] = $this->_buildVcardItem($data['TITLE'], array_merge($defaultArr, array(
            'title' => '职位',
        )));
        $newarr['company'][0]['department'] = $this->_buildVcardItem($data['DEPAR'], array_merge($defaultArr, array(
            'title' => '部门',
        )));
        $newarr['company'][0]['telephone'] = $this->_buildVcardItem($data['TEL'], array_merge($defaultArr, array(
            'title' => '电话',
        )));
        
        $newarr['company'][0]['web'] = $this->_buildVcardItem($data['URL'], array_merge($defaultArr, array(
            'title' => '网址',
        )));
        $newarr['company'][0]['email'] = $this->_buildVcardItem($data['EMAIL'], array_merge($defaultArr, array(
            'title' => '邮箱',
        )));
        //print_r($newarr);die;
        return $newarr;
    }
    
    /**
     * 做成vcard数据
     * @param arr $data
     * @return arr
     */
    private function _buildVcardItem($itemList, $defaultArr){
        $newarr = array();
        for ($i = 0; $i < count($itemList); $i++) {
            $tmp = array(
                'value' => $itemList[$i]
            );
            
            $newarr[] = array_merge($tmp, $defaultArr);
        }
        return $newarr;
    }
    
    /**
     * 保存名片信息
     */
    public function cardSave(){
        $front  = I('front');
        $back   = I('back');
        $cardid = I('cardid');
        $image  = I('image');
        $files  = array();
        
        $cardtype = I('cardtype','scan');
        
        //名片图片
        if (!empty($image)) {
            $image = $this->_createCard($image);
            if (is_array($image)){
                $files['picture']  = $image['thum'];
                $files['picpatha'] = $image['path'];
            }
        }
        
        //vCard数据
        $front = $this->_buildVcard($front, 'front');
        $back  = $this->_buildVcard($back, 'back');
        $vcard = array(
            'front' => $front,
            'back'  => $back
        );
        $params['vcard'] = json_encode($vcard);
        
        if ($cardid) {
            //更新
            $params['vcardid'] = $cardid;
            
            $callApiParams = array(
                'url'    => C('API_WX_BIZCARD_EDIT'),
                'crud'   => 'C',
                'params' => $params
            );
            
            if ($cardtype == 'custom'){
                $callApiParams['doParseApi'] = true;
                $callApiParams['files'] = $files;
            }
            $rst = \AppTools::webService('\Model\Common\Common', 'callApi', $callApiParams);
        } else {
            //添加
            $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
                array(
                    'url'    => C('API_WX_BIZCARD_ADD'),
                    'crud'   => 'C',
                    'params' => $params,
                    'files'  => $files,
                    
                    'doParseApi' => true,
                )
            );
        }
        
        if ($rst['status'] == 0){
            $rst['msg1'] = '保存成功';
        } else {
            $rst['msg1'] = '保存失败';
        }
        
        foreach ($files as $file) {
            \GFile::delfile($file);
        }
        
        echo json_encode($rst);
    }
    
    /**
     * 创建名片图片和缩略图
     * @param data $image
     * @return arr
     */
    private function _createCard($image){
        $image = base64_decode(str_replace("data:image/png;base64,", '', $image));
        $filepath = C('UPLOAD_PATH');
        if (!is_dir($filepath)) {
            \GFile::mkdir($filepath);
        }
        $filename = md5($image);
        $filepath .= $filename.'.png';
        file_put_contents($filepath, $image);
        
        $thumpath = str_replace(".png", "-thumb.png", $filepath);
        $image = new \Think\Image();
        $image->open($filepath);
        $width = $image->width(); // 返回图片的宽度
        $height = $image->height();
        
        $image->thumb($width/4, $height/4)->save($thumpath);
        return array('path'=>$filepath, 'thum'=>$thumpath);
    }
    
    /**
     * 搜索员工
     * @return unknown
     */
    public function searchEmps($isReturn=false){
        $params['name']   = I('ename');
        $params['enable'] = 1;
        $params['rows']   = PHP_INT_MAX;
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url'    => C('API_COMPANY_STAFF_GET'),
                'params' => $params
            )
        );
        $empList = $rst['data']['list'];
        
        //去掉自己
        for ($i = 0; $i < count($empList); $i++) {
            if ($_SESSION['Company']['clientid'] == $empList[$i]['id']){
                //unset($empList[$i]);
                array_splice($empList, $i, 1);
                break;
            }
        }
        
        if ($isReturn) {
            return $empList;
        } else {
            $rst['list'] = $empList;
            echo json_encode($rst);
        }
    }
    
    /**
     * 搜索部门
     * @return unknown
     */
    public function searchDepts($isReturn=false){
        $params['name'] = I('dname');
        $params['rows'] = PHP_INT_MAX;
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url'    => C('API_COMPANY_DEPART_GET'),
                'params' => $params
            )
        );
        $deptList = $rst['data']['list'];
        if ($isReturn) {
            return $deptList;
        } else {
            $rst['list'] = $deptList;
            echo json_encode($rst);
        }
    }
    

    /**
     * 删除名片共享
     */
    public function delCardAuth(){
        $params['cardid']    = I('card');
        $params['type']      = I('type');
        $params['moduleids'] = I('module');
        
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url'    => C('API_WX_SHARE_DEL'),
                'crud'   => 'C',
                'params' => $params
            )
        );
        
        if ($rst['status'] == 0){
            $rst['msg1'] = '删除成功';
        } else {
            $rst['msg1'] = '删除失败';
        }
        echo json_encode($rst);
    }
    
    /**
     * 卡片查看权限
     */
    public function cardAuth(){
        $cards = I('cards');
        //echo $cards;die;
        $emps  = I('emps');
        $depts = I('depts');
        $s1 = $s2 = 0;
        
        $params['cardid']    = $cards;
        $params['type']      = 1;
        $params['moduleids'] = $emps;
        
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url'    => C('API_WX_SHARE_ADD'),
                'crud'   => 'C',
                'params' => $params
            )
        );
        $s1 = $rst['status'];
        
        $params = array();
        $params['cardid']    = $cards;
        $params['type']      = 2;
        $params['moduleids'] = $depts;
    
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url'    => C('API_WX_SHARE_ADD'),
                'crud'   => 'C',
                'params' => $params
            )
        );
        $s2 = $rst['status'];
        
        $rst = array();
        $rst['status'] = 0;
        if ($s1 == '0' && $s2 == '0') {
            $rst['msg'] = '操作成功';
        } else if ($s1 != 0){
            $rst['status'] = 1;
            $rst['msg'] = '员工权限操作失败';
        } else if ($s2 != 0){
            $rst['status'] = 2;
            $rst['msg'] = '部门权限操作失败';
        } else {
            $rst['status'] = 3;
            $rst['msg'] = '操作失败';
        }
        echo json_encode($rst);
    }
    
    /**
     * 加载员工AND部门数据
     */
    public function loadEmpDept(){
        $deptList  = $this->searchDepts(true);
        $empList   = $this->searchEmps(true);
        
        $_empList = $_deptList = array();
        $cards = explode(',', I('cards'));
        if (count($cards) == 1) {
            $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
                array(
                    'url'    => C('API_WX_SHARE_GET'),
                    'params' => array('cardid'=>$cards[0], 'rows'=>PHP_INT_MAX)
                )
            );
            
            for ($i = 0; $i < count($rst['data']['data']); $i++) {
                $tmp = $rst['data']['data'][$i];
                if ($tmp['type'] == 1){
                    $_empList[] = $tmp;
                }
                if ($tmp['type'] == 2){
                    $_deptList[] = $tmp;
                }
            }
        }
        $rst = array();
        $rst['depts']  = $deptList;
        $rst['emps']   = $empList;
        $rst['_depts'] = $_deptList;
        $rst['_emps']  = $_empList;
        echo json_encode($rst);
    }
    
    /**
     * 获取员工数据
     */
    public function getEmployees(){
        $params['rows']   = PHP_INT_MAX;
        $params['enable'] = 1;
        $params['is_del'] = 0;
        $params['bizid']  = $_SESSION['Company']['bizid'];
        $params['sort']   = 'name asc';
        $params['fields'] = 'id,name';
        $result = \AppTools::webService('\Model\Departments\Departments', 'getStaffM',array('params'=>$params));
        echo json_encode($result['data']);
    }
    
    /**
     * 首页
     */
    public function index(){
        //print_r($_SESSION);die;
        //部门、员工数据
        $paramss['rows'] = 99999;
        $paramss['sort'] = 'createdtime asc';
        $depart = A('Departments');
        $retult_d = $depart->getDepartData($paramss);
        $depart->departReturn($retult_d);
        $staff = $depart->getDepartStaff();
        $this->assign('staff',$staff);
        
        //全部共享数据（1：开，2：关）
        $params['bizid'] = $_SESSION['Company']['bizid'];
        $result = \AppTools::webService('\Model\Departments\Departments', 'getBizInfo',array('params'=>$params));
        $this->assign('isopen',$result['data']['list'][0]['open']);
        
        //标签列表
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url' => C('API_WX_BIZTAG_GET'),
                'params' => array('rows'=>PHP_INT_MAX)
            )
        );
//         print_r($_SESSION);die;
        $tagList = $rst['data']['list'];
        //print_r($tagList);die;
        $this->assign('tags', $tagList);
        
        //名片数量
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url' => C('API_WX_BIZCARD_COUNT'),
            )
        );
        //print_r($rst);die;
        $this->assign('counts', $rst['data']);
        
        //名片列表
        $params = $this->_params();
        $url = C('API_WX_BIZCARD_GET');
        if ($params['searchType'] == 1) {
            unset($params['searchType']);
            $url = C('API_WX_BIZCARD_GET_MORE');
        }
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi', 
            array(
                'url'    => $url,
                'params' => $params
            )
        );
        
        $list = $rst['data']['list'];
        $list = $this->_processData($list, $tagList);
        //print_r($list);die;
        $this->assign('list', $list);
        $this->assign('totalCount', $rst['data']['numfound']);
        
        $page = getpage($rst['data']['numfound'], $this->rows);//使用分页类
        $totalpages = ceil($rst['data']['numfound'] / $this->rows);
        $this->assign('pagedata', $page->show());//分配分页
        $this->assign('totalpage', $totalpages);//分配总页数
        $info = I('get.issearch') == '1'? 'cardsearchresult' : 'cardlist';
        $this->assign('breadcrumbs',array('key'=>'cardmanage','info'=>$info,'show'=>''));
        $this->assign('moreCSSs',array(
            'css/Company/index',
        ));
        $this->assign('moreScripts', array(
            'js/oradt/global',
            'js/jsExtend/String',
        ));
        $this->assign('maxtagnum', $this->_MAX_TAG_NUM);
        $this->display('index');
    }
    
    /**
     * 获取名片信息
     */
    public function cardInfo(){
        //名片信息
        $params['vcardid'] = I('cardid');
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url'    => C('API_WX_BIZCARD_GET'),
                'params' => $params
            )
        );
        if ($rst['status'] != 0){
            $rst['msg1'] = '获取名片信息失败';
            echo json_encode($rst);
            return;
        }
        
        $list = $rst['data']['list'];
        $rst1 = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url' => C('API_WX_BIZTAG_GET'),
            )
        );
        $tagList = $rst1['data']['list'];
        $list = $this->_processData($list, $tagList);
        
        //分享信息
        $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
            array(
                'url'    => C('API_WX_SHARE_GET'),
                'params' => array('cardid'=>$params['vcardid'], 'rows'=>PHP_INT_MAX)
            )
        );
        
        $emps = $depts = array();
        for ($i = 0; $i < count($rst['data']['data']); $i++) {
            $tmp = $rst['data']['data'][$i];
            if ($tmp['type'] == 1 && $list[0]['accountid'] != $tmp['moduleid']){
                $emps[]  = $tmp['moduleid'];
            } else {
                $depts[] = $tmp['moduleid'];
            }
        }
        
        //搜索分享的员工
        if (!empty($emps)){
            $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
                array(
                    'url'    => C('API_COMPANY_STAFF_GET'),
                    'params' => array('id'=>join(',', $emps), 'rows'=>PHP_INT_MAX)
                )
            );
            $emps = $rst['data']['list'];
        }
        
        //添加自己
        $emps = array_merge(array(array(
            'id'   => $list[0]['accountid'],
            'name' => $list[0]['accountname'],
        )), $emps);
        
        
        //搜索分享的部分
        if (!empty($depts)){
            $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
                array(
                    'url'    => C('API_COMPANY_DEPART_GET'),
                    'params' => array('id'=>join(',', $depts), 'rows'=>PHP_INT_MAX)
                )
            );
            $depts = $rst['data']['list'];
        }
        
        echo json_encode(array('status'=>0,'data'=>$list[0],'depts'=>$depts,'emps'=>$emps));
    }
    
    /**
     * 名片回收站
     */
    public function cardRecyclebin (){
    	$this->assign('moreCSSs',array('css/Company/index'));
    	$this->display('cardRecyclebin');
    }

    /**
     * 删除名片
     */
    public function delCard(){
        $cards = explode(',', I('cards'));
        $successCount = 0;
        for ($i = 0; $i < count($cards); $i++) {
            $params['vcardid'] = $cards[$i];
            $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
                array(
                    'url'    => C('API_WX_BIZCARD_DEL'),
                    'crud'   => 'C',
                    'params' => $params
                )
            );
            if ($rst['status'] == 0){
                $successCount++;
            }
        }
        
        $rst = array();
        if (count($cards) == $successCount){
            $rst = array('status'=>0, 'msg'=>'删除成功');
        } else {
            $rst = array('status'=>1, 'msg'=>'部分名片删除失败');
        }
        
        echo json_encode($rst);
    }
    
    /**
     * 给名片添加标签
     */
    public function addTag(){
        $cards = explode(',', I('cards'));
        $tagid = I('tags');
        
        $successCount = 0;
        for ($i = 0; $i < count($cards); $i++) {
            $rst = \AppTools::webService('\Model\Common\Common', 'callApi',
                array(
                    'url'    => C('API_WX_BIZCARD_ADDTAG'),
                    'crud'   => 'C',
                    'params' => array('vcardid'=>$cards[$i], 'remark'=>$tagid)
                )
            );
            if ($rst['status'] == 0){
                $successCount++;
            }
        }
        
        $rst = array();
        if (count($cards) == $successCount){
            $rst = array('status'=>0, 'msg'=>'操作成功');
        } else {
            $rst = array('status'=>1, 'msg'=>'部分标签添加失败');
        }
        
        echo json_encode($rst);
    }
    
    /**
     * 处理名片列表数据
     * @param arr $list
     * @praam arr $tagList
     * @return arr
     */
    private function _processData($list, $tagList){
        $tags = array();
        for ($i = 0; $i < count($tagList); $i++) {
            $tmp = $tagList[$i];
            $tags[$tmp['id']] = $tmp;
        }
        //print_r($tags);die;
        for ($i = 0; $i < count($list); $i++) {
            //标签
            $tagIds = split(',', $list[$i]['remark']);
            $list[$i]['remark'] = array();
            for ($j = 0; $j < count($tagIds); $j++) {
                !empty($tags[$tagIds[$j]]['tags']) && $list[$i]['remark'][] = $tags[$tagIds[$j]];
            }
            
            $list[$i]['createdtime'] = date('Y-m-d', $list[$i]['createdtime']);
            
            //图片（如果没有小图，则用大图）
            if (empty($list[$i]['picture'])){
                $list[$i]['picture'] = $list[$i]['picpatha'];
            }
        }
        //print_r($list);die;
        return $this->analyShowVcard($list, true);
    }
    
    /**
     * 解析名片数据用于显示
     * @param array $list 列表数据
     * @param bool $showBack 是否解析名片反面数据
     * @param bool $isJson 是否解析vcard数据
     */
    private function analyShowVcard($list,$showBack=false,$isJson=true){// vcardid=16452
        if($list){
            foreach ($list as $key=>$val){
                unset($list[$key]['ENG'],$list[$key]['DEPT'],$list[$key]['FN'],$list[$key]['TITLE'],$list[$key]['ORG'],$list[$key]['ADR'],$list[$key]['CELL'],$list[$key]['TEL'],$list[$key]['URL'],$list[$key]['EMAIL']);
                $vcard = $val['vcard'] ? json_decode($val['vcard'],true) : array();
                if(empty($val['vcard']) || empty($vcard['front'])){
                    continue;
                }
                //echo __FILE__.' LINE:'.__LINE__."\r\n".'<pre>',print_r($vcard,1);exit;
                $front = $vcard['front']; //名片正面数据
                $list[$key]['front'] = $this->_getVcardSingleData($front);
                $back = array();
                if($showBack==true && !empty($vcard['back'])){ //名片反面数据
                    $back = $this->_getVcardSingleData($vcard['back']);
                }
                $list[$key]['back'] = $back;
            }
        }
        return $list;
    }
    
    /**
     * 解析名片单面数据,单独解析名片正面数据或反面数据，根据传递的数据源来决定
     * @param array $oneSideData 名片单面的数据
     * @return multitype:unknown multitype: multitype:unknown
     */
    private function _getVcardSingleData($oneSideData){
        $rst = array();
        $ENG = $DEPAR = $FN = $ORG = $ADR = $CELL = $TEL = $URL = $TITLE = $EMAIL = array();
        $FN = $this->_getVcardValue($oneSideData,'name'); //人名
        $ENG = $this->_getVcardValue($oneSideData,'name', true); //人名
        $CELL = $this->_getVcardValue($oneSideData,'mobile'); //手机
        if(!empty($oneSideData['company'])){
            foreach ($oneSideData['company'] as $company){
                $ORG = $this->_getVcardValue($company,'company_name'); //公司名称
                $ADR = $this->_getVcardValue($company,'address'); //地址
                $TEL = $this->_getVcardValue($company,'telephone'); //电话
                $URL = $this->_getVcardValue($company,'web'); //网址
                $TITLE = $this->_getVcardValue($company,'job'); //职位
                $EMAIL = $this->_getVcardValue($company,'email'); //邮箱
                $DEPAR = $this->_getVcardValue($company,'department'); //部门
            }
        }
        $rst = array('FN' => $FN,
            'ENG' => $ENG,
            'ORG' => $ORG,
            'ADR' => $ADR,
            'CELL' => $CELL,
            'TEL' => $TEL,
            'URL' => $URL,
            'TITLE' => $TITLE,
            'EMAIL' => $EMAIL,
            'DEPAR' => $DEPAR
        );
        //var_dump($rst);
        return $rst;
    }
    
    /**
     * 获取名片json字符串中的value
     * param $dataSet 数据数组
     * param $jsonName 数据健名
     */
    private function _getVcardValue($dataSet,$jsonName, $englishname = false){
        $rst = array();
        if(isset($dataSet[$jsonName])){
            foreach ($dataSet[$jsonName] as $dataElement){
                if ($jsonName == 'name') { // 姓名项区分中英文
                    if ($englishname) {
                        if ($dataElement['is_chinese'] == '0') { //英文
                            $rst[] = $dataElement['value'];
                        }
                    } else {
                        if ($dataElement['is_chinese'] == '1') { //中文
                            $rst[] = $dataElement['value'];
                        }
                    }
                } else {
                    $rst[] = $dataElement['value'];
                }
            }
        }
        return $rst;
    }
    
    /**
     * 列表页参数
     * @return arr
     */
    private function _params(){
        $p = (I('get.p') > 1) ? I('get.p') : 1;
    
        /*
        //排序判断
        $order = (I('get.order') !== '') ? urldecode(I('get.order')) : 'lastupdatetime';
        $ordertype = (I('get.ordertype') !== '') ? urldecode(I('get.ordertype')) : 'desc';
        $params['sort'] = $order . ' ' . $ordertype;
        */
        //类型
        $params['section'] = I('type');
        $searchType = I('searchType');
        
        if (empty($searchType)){
            //普通搜索，搜素内容判断
            $keyword = (I('get.keyword') !== '') ? trim(urldecode(I('get.keyword'))) : '';
            if (!empty($keyword)) {
                $params['vcardtxt'] = $keyword;
            }
        } else if($searchType=='2'){
            //标签搜索
            $params['remark'] = I('tags');
        } else {
            //高级搜索
            $params['creatorid'] = I('eid');
            $params['cardname']  = I('fn');
            
            $params['org']   = I('org');
            $params['depar'] = I('depar');
            $params['title'] = I('title');
            $params['adr']   = I('adr');
            $params['email'] = I('email');
            
            $starttime = strtotime(I('stime'));
            $endtime   = strtotime(I('etime'))+3600*24;
            if (!empty($starttime)) {
                $params['createdtimeinfo'] = "$starttime,$endtime";
            }
            
            $params['searchType'] = 1;
        }
        
        
        $params['rows'] = $this->rows;
        $params['start'] = ($p > 1) ? ($p - 1) * $params['rows'] : 0;
        $_GET['keyword'] = $keyword;
        $_GET['ename']   = urldecode(I('get.ename'));
        $_GET['tagname'] = urldecode(I('get.tagname'));
        $this->assign('get', $_GET);
        return $params;
    }

}
